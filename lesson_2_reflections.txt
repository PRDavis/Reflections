1. 	What happens when you initialize a repository? Why do you need to do it?
		It creates a .git directory that contains metadata about the version changes
		and contents of the repository. 
		The reason you need to do it is that without it Git would not work.

2. 	How is the staging area different from the working directory and the
	 	repository? What value do you think it offers?
		The staging area is between the working directory and the repository. Files are selected for a commit from the working directory and added to the staging area. 
		This allows the user control over what is added to the commit. If a small change was made to a few files, the entier project does not need to be added. 
3.  How can you use the staging area to make sure you have one commit per logical 		change?
		Only add the files you have made changes to for the current logical breakpoint.

4.	What are some situations when branches would be helpful in keeping your 
	history organized? How would branches help?
		Any major changes can begin down a new branch, so they serve as milemarkers or sign posts along the way. 
		If you have a stable version of code, but want to add more features, you could branch to develop the features and still keep the working version available.

5.	How do the diagrams help you visualize the branch structure?
		They provide a graphical representation of the tree structure.
		
